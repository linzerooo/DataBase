Вариант № 4. Реализация готовой продукции
Описание предметной области
Вы работаете в компании, занимающейся оптово-розничной
продажей различных товаров. Вашей задачей является отслеживание
финансовой стороны ее работы.
Деятельность компании организована следующим образом:
компания торгует товарами из определенного спектра. Каждый из этих
товаров характеризуется наименованием, оптовой ценой, розничной ценой
и справочной информацией. В вашу компанию обращаются покупатели.
Для каждого из них вы запоминаете в базе данных стандартные данные
(наименование, адрес, телефон, контактное лицо) и составляете по каждой
сделке документ, запоминая наряду с покупателем количество купленного
им товара и дату покупки.
Возможный набор сущностей
Товары (Код товара, Наименование, Оптовая цена, Розничная цена,
Описание).
Покупатели (Код покупателя, Телефон, Контактное лицо, Адрес).
Сделки (Код сделки, Дата сделки, Код товара, Количество, Код
покупателя, Признак оптовой продажи).

Выполним код MsSQL
 '''
CREATE DATABASE SalesDB;
GO
CREATE TABLE Products (
    Product_ID INT PRIMARY KEY,
    Product_Name NVARCHAR(255),
    Wholesale_Price DECIMAL(10, 2),
    Retail_Price DECIMAL(10, 2),
    Description NVARCHAR(MAX)
);
CREATE TABLE Customers (
    Customer_ID INT PRIMARY KEY,
    Phone NVARCHAR(20),
    Contact_Person NVARCHAR(255),
    Address NVARCHAR(MAX)
);
CREATE TABLE Transactions (
    Transaction_ID INT PRIMARY KEY,
    Transaction_Date DATE,
    Product_ID INT,
    Quantity INT,
    Customer_ID INT,
    Wholesale_Flag BIT,
    FOREIGN KEY (Product_ID) REFERENCES Products(Product_ID),
    FOREIGN KEY (Customer_ID) REFERENCES Customers(Customer_ID)
);
'''

Потом выполняем код на питоне

import psycopg2
from faker import Faker
import random

fake = Faker()

# Подключение к базе данных PostgreSQL
conn = psycopg2.connect(
    dbname="SalesDB",
    user="your_username",
    password="your_password",
    host="localhost",
    port="5432"
)

cursor = conn.cursor()

# Генерация данных для таблицы Products
for i in range(6, 106):  # Создаем 100 продуктов
    product_name = fake.company()
    wholesale_price = random.uniform(10, 1000)
    retail_price = wholesale_price * random.uniform(1.1, 1.5)
    description = fake.text()

    # Вставляем данные продукта в таблицу Products
    cursor.execute("INSERT INTO Products (Product_ID, Product_Name, Wholesale_Price, Retail_Price, Description) VALUES (%s, %s, %s, %s, %s)",
                   (i, product_name, wholesale_price, retail_price, description))

# Генерация данных для таблицы Customers
for i in range(1, 101):  # Создаем 100 клиентов
    phone = fake.phone_number()[:20]
    contact_person = fake.name()
    address = fake.address()

    # Вставляем данные клиента в таблицу Customers
    cursor.execute("INSERT INTO Customers (Customer_ID, Phone, Contact_Person, Address) VALUES (%s, %s, %s, %s)",
                   (i, phone, contact_person, address))

# Генерация данных для таблицы Transactions
for i in range(2, 100):  # Создаем 1000 транзакций
    transaction_date = fake.date_between(start_date='-1y', end_date='today')
    product_id = random.randint(10, 100)
    quantity = random.randint(1, 10)
    customer_id = random.randint(1, 100)
    wholesale_flag = random.choice([False, True])

    # Вставляем данные транзакции в таблицу Transactions
    cursor.execute("INSERT INTO Transactions (Transaction_ID, Transaction_Date, Product_ID, Quantity, Customer_ID, Wholesale_Flag) VALUES (%s, %s, %s, %s, %s, %s)",
                   (i, transaction_date, product_id, quantity, customer_id, wholesale_flag))

# Коммитим изменения и закрываем соединение
conn.commit()
conn.close()

В итоге получаем заполненную бд

![Image alt][https://sun9-52.userapi.com/impg/Hj3gdBTqi315zCKpqX5gV7v_J2I3GFIPXzYcmQ/RYAxJ2Fy0oU.jpg?size=1108x460&quality=96&sign=d703b4376db0ec58af23f4e77c6b220a&type=album]



